--- libphonenumber-8.12.57/cpp/CMakeLists.txt.orig	2023-02-26 10:49:15.997683242 +0100
+++ libphonenumber-8.12.57/cpp/CMakeLists.txt	2023-02-26 17:16:58.674991835 +0100
@@ -18,7 +18,7 @@ cmake_minimum_required (VERSION 3.11)
 
 # Pick the C++ standard to compile with.
 # Abseil currently supports C++11, C++14, and C++17.
-set(CMAKE_CXX_STANDARD 11 CACHE STRING "C++ standard used to compile this project")
+set(CMAKE_CXX_STANDARD 17 CACHE STRING "C++ standard used to compile this project")
 set(CMAKE_CXX_STANDARD_REQUIRED ON)
 
 project (libphonenumber)
@@ -202,9 +202,8 @@ add_custom_command (
   DEPENDS ${PROTOBUF_SOURCES}
 )
 
+find_package(absl REQUIRED COMPONENTS node_hash_set strings synchronization)
 if (${BUILD_GEOCODER} STREQUAL "ON")
-  find_package(absl)
-
   # Geocoding data cpp file generation
   set (TOOLS_DIR "${CMAKE_CURRENT_BINARY_DIR}/tools")
   add_subdirectory("${CMAKE_CURRENT_SOURCE_DIR}/../tools/cpp" "${TOOLS_DIR}")
--- libphonenumber-8.12.57/tools/cpp/CMakeLists.txt.orig	2023-02-26 10:49:16.001016558 +0100
+++ libphonenumber-8.12.57/tools/cpp/CMakeLists.txt	2023-02-26 17:39:18.954397584 +0100
@@ -18,7 +18,7 @@ cmake_minimum_required (VERSION 3.11)
 
 # Pick the C++ standard to compile with.
 # Abseil currently supports C++11, C++14, and C++17.
-set(CMAKE_CXX_STANDARD 11)
+set(CMAKE_CXX_STANDARD 17)
 set(CMAKE_CXX_STANDARD_REQUIRED ON)
 
 project (generate_geocoding_data)
@@ -26,32 +26,8 @@ project (generate_geocoding_data)
 # Helper functions dealing with finding libraries and programs this library
 # depends on.
 include (gtest.cmake)
-include (FetchContent)
 
-if(NOT absl_FOUND)
-  # Downloading the abseil sources at particular version to not catch up
-  # with its new build requirements like min C++14 is mandated in that lib.
-  FetchContent_Declare(
-      abseil-cpp
-      GIT_REPOSITORY  https://github.com/abseil/abseil-cpp.git
-      GIT_TAG         273292d
-  )
-
-  # Building the abseil binaries
-  FetchContent_GetProperties(abseil-cpp)
-  if (NOT abseil-cpp_POPULATED)
-      FetchContent_Populate(abseil-cpp)
-  endif ()
-
-  if (NOT abseil-cpp_POPULATED)
-     message (FATAL_ERROR "Could not build abseil-cpp binaries.")
-  endif ()
-
-  # Safeguarding against any potential link errors as mentioned in
-  # https://github.com/abseil/abseil-cpp/issues/225
-  set(CMAKE_POSITION_INDEPENDENT_CODE TRUE)
-  add_subdirectory(${abseil-cpp_SOURCE_DIR} ${abseil-cpp_BINARY_DIR})
-endif()
+find_package(absl REQUIRED COMPONENTS strings btree node_hash_set)
 
 find_or_build_gtest ()
 set (
